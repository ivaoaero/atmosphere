import{j as p}from"./jsx-runtime-DiklIkkE.js";import{r as l}from"./index-DRjF_FHU.js";import{N as u}from"./index-bOIcktu9.js";import{c as h}from"./styles-CytzSlOG.js";import"./index-Bx0Ph3cE.js";import"./index-DRtXj63t.js";import"./index-DNjz5F53.js";import"./index-ZGl1IALt.js";import"./index-zZ8-XE7G.js";import"./index-CB2Ck3t8.js";import"./index-CwIEgGhy.js";import"./index-CVyrcOig.js";import"./index-DSPJRkee.js";import"./index-be71vEei.js";import"./index-2PLgWUiy.js";import"./index-DE697g4A.js";import"./index-Iz9Zo_Nw.js";import"./index-DPjRV10W.js";import"./index-bksmFdny.js";import"./chevron-down-BTxBlyiS.js";import"./createLucideIcon-B1d7gGsx.js";const r=l.forwardRef(({to:o,...i},t)=>p.jsx("a",{href:o,ref:t,...i}));r.displayName="ReactRouterLink";const m=l.forwardRef(({href:o,className:i,onClick:t,...c},d)=>p.jsx(r,{ref:d,to:o,onClick:f=>{console.log("clicked a link"),t==null||t(f)},className:h(i,"text-destructive"),...c}));m.displayName=r.displayName;const F={title:"Navigation/NavigationMenu",component:u,tags:["autodocs"],args:{sections:[{title:"Getting Started",links:[{title:"Installation",href:"/docs/getting-started/installation",description:"Learn how to install the package."},{title:"Usage",href:"/docs/getting-started/usage",description:"Learn how to use the package."}]},{title:"Components",links:[{title:"Alert Dialog",href:"/docs/primitives/alert-dialog",description:"A modal dialog that interrupts the user with important content and expects a response."},{title:"Hover Card",href:"/docs/primitives/hover-card",description:"For sighted users to preview content available behind a link."},{title:"Progress",href:"/docs/primitives/progress",description:"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar."},{title:"Scroll-area",href:"/docs/primitives/scroll-area",description:"Visually or semantically separates content."},{title:"Tabs",href:"/docs/primitives/tabs",description:"A set of layered sections of content—known as tab panels—that are displayed one at a time."},{title:"Tooltip",href:"/docs/primitives/tooltip",description:"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it."}]},{title:"Documentation",href:"/docs"}],asLink:m},argTypes:{sections:{table:{type:{summary:"NavigationMenuSectionProps[]"}}},asLink:{control:!1,description:"You can provide a custom component that will be used as a link. This is useful for using a custom router or a different link component.",table:{type:{summary:"ComponentType<NavigationMenuAsLinkProps>"}}}}},e={parameters:{docs:{story:{inline:!1,iframeHeight:400}}}};var s,a,n;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`{
  parameters: {
    docs: {
      story: {
        inline: false,
        iframeHeight: 400
      }
    }
  }
} satisfies Story`,...(n=(a=e.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};const G=["Default"];export{e as Default,G as __namedExportsOrder,F as default};
