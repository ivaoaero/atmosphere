import{a as r}from"./index-B-lxVbXh.js";import{S as d}from"./index-BcYq-tld.js";import"./v4-CtRu48qb.js";import"./jsx-runtime-DiklIkkE.js";import"./index-DRjF_FHU.js";import"./index-BdQq_4o_.js";import"./index-DNjz5F53.js";import"./index-zZ8-XE7G.js";import"./index-DRtXj63t.js";import"./index-CB2Ck3t8.js";import"./index-CwIEgGhy.js";import"./index-Iz9Zo_Nw.js";import"./index-Dd68SkXN.js";import"./index-DSPJRkee.js";import"./index-ZGl1IALt.js";import"./index-Bx0Ph3cE.js";import"./index-2PLgWUiy.js";import"./styles-CytzSlOG.js";const _={title:"Forms/Slider",component:d,tags:["autodocs"],args:{defaultValue:[20],min:0,max:100,step:1,onValueChange:r("value change"),onValueCommit:r("value commit")},argTypes:{defaultValue:{description:"The default value of the slider. Cannot be used with `value`!",table:{type:{summary:"number[]"}}},value:{description:"The controlled value of the slider. Cannot be used with `defaultValue`!",table:{type:{summary:"number[]"}}},min:{description:"The minimum value of the slider.",type:"number"},max:{description:"The maximum value of the slider.",type:"number"},step:{description:"The step value of the slider.",type:"number"},minStepsBetweenThumbs:{description:"The minimum permitted `step`s beteween multiple thumbs/values.",type:"number"},orientation:{description:"The orientation of the slider.",options:["horizontal","vertical"],control:"inline-radio",table:{type:{summary:"horizontal | vertical"}}},dir:{description:"The direction of the slider.",options:["ltr","rtl"],control:"inline-radio",table:{type:{summary:"ltr | rtl"}}},onValueChange:{description:"Callback when the value changes."},onValueCommit:{description:"Callback when the value changes at the end of an interaction. Useful when you only need to capture a final value e.g. to update a backend service."}}},e={},t={name:"Multiple thumbs / Range",args:{defaultValue:[10,20]}},a={name:"Minimum range with multiple thumbs",args:{defaultValue:[10,20],minStepsBetweenThumbs:10}};var i,o,n;e.parameters={...e.parameters,docs:{...(i=e.parameters)==null?void 0:i.docs,source:{originalSource:"{} satisfies Story",...(n=(o=e.parameters)==null?void 0:o.docs)==null?void 0:n.source}}};var s,m,l;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  name: 'Multiple thumbs / Range',
  args: {
    defaultValue: [10, 20]
  }
} satisfies Story`,...(l=(m=t.parameters)==null?void 0:m.docs)==null?void 0:l.source}}};var u,p,c;a.parameters={...a.parameters,docs:{...(u=a.parameters)==null?void 0:u.docs,source:{originalSource:`{
  name: 'Minimum range with multiple thumbs',
  args: {
    defaultValue: [10, 20],
    minStepsBetweenThumbs: 10
  }
} satisfies Story`,...(c=(p=a.parameters)==null?void 0:p.docs)==null?void 0:c.source}}};const E=["Default","MultipleThumbs","MinRange"];export{e as Default,a as MinRange,t as MultipleThumbs,E as __namedExportsOrder,_ as default};
